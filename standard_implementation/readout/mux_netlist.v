/* Generated by Yosys 0.9 (git sha1 1979e0b1, gcc 10.3.0-1ubuntu1~20.10 -fPIC -Os) */

(* dynports =  1  *)
(* top =  1  *)
(* src = "mux.sv:1" *)
module mux(select, in1, in2, in3, in4, out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  (* src = "mux.sv:3" *)
  wire _019_;
  (* src = "mux.sv:3" *)
  wire _020_;
  (* src = "mux.sv:3" *)
  wire _021_;
  (* src = "mux.sv:3" *)
  wire _022_;
  (* src = "mux.sv:3" *)
  wire _023_;
  (* src = "mux.sv:3" *)
  wire _024_;
  (* src = "mux.sv:3" *)
  wire _025_;
  (* src = "mux.sv:3" *)
  wire _026_;
  (* src = "mux.sv:4" *)
  wire _027_;
  (* src = "mux.sv:4" *)
  wire _028_;
  (* src = "mux.sv:4" *)
  wire _029_;
  (* src = "mux.sv:4" *)
  wire _030_;
  (* src = "mux.sv:4" *)
  wire _031_;
  (* src = "mux.sv:4" *)
  wire _032_;
  (* src = "mux.sv:4" *)
  wire _033_;
  (* src = "mux.sv:4" *)
  wire _034_;
  (* src = "mux.sv:5" *)
  wire _035_;
  (* src = "mux.sv:5" *)
  wire _036_;
  (* src = "mux.sv:5" *)
  wire _037_;
  (* src = "mux.sv:5" *)
  wire _038_;
  (* src = "mux.sv:5" *)
  wire _039_;
  (* src = "mux.sv:5" *)
  wire _040_;
  (* src = "mux.sv:5" *)
  wire _041_;
  (* src = "mux.sv:5" *)
  wire _042_;
  (* src = "mux.sv:6" *)
  wire _043_;
  (* src = "mux.sv:6" *)
  wire _044_;
  (* src = "mux.sv:6" *)
  wire _045_;
  (* src = "mux.sv:6" *)
  wire _046_;
  (* src = "mux.sv:6" *)
  wire _047_;
  (* src = "mux.sv:6" *)
  wire _048_;
  (* src = "mux.sv:6" *)
  wire _049_;
  (* src = "mux.sv:6" *)
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  (* src = "mux.sv:7" *)
  wire _111_;
  (* src = "mux.sv:7" *)
  wire _112_;
  (* src = "mux.sv:7" *)
  wire _113_;
  (* src = "mux.sv:7" *)
  wire _114_;
  (* src = "mux.sv:7" *)
  wire _115_;
  (* src = "mux.sv:7" *)
  wire _116_;
  (* src = "mux.sv:7" *)
  wire _117_;
  (* src = "mux.sv:7" *)
  wire _118_;
  (* src = "mux.sv:2" *)
  wire _119_;
  (* src = "mux.sv:2" *)
  wire _120_;
  (* src = "mux.sv:3" *)
  input [7:0] in1;
  (* src = "mux.sv:4" *)
  input [7:0] in2;
  (* src = "mux.sv:5" *)
  input [7:0] in3;
  (* src = "mux.sv:6" *)
  input [7:0] in4;
  (* src = "mux.sv:7" *)
  output [7:0] out;
  (* src = "mux.sv:2" *)
  input [1:0] select;
  IVX1_CV _121_ (
    .A(_119_),
    .Y(_060_)
  );
  ORX1_CV _122_ (
    .A(_119_),
    .B(_120_),
    .Y(_061_)
  );
  ORX1_CV _123_ (
    .A(_019_),
    .B(_061_),
    .Y(_062_)
  );
  ANX1_CV _124_ (
    .A(_060_),
    .B(_120_),
    .Y(_063_)
  );
  ENX1_CV _125_ (
    .A(_119_),
    .B(_120_),
    .Y(_064_)
  );
  NDX1_CV _126_ (
    .A(_043_),
    .B(_064_),
    .Y(_065_)
  );
  NDX1_CV _127_ (
    .A(_035_),
    .B(_063_),
    .Y(_066_)
  );
  NRX1_CV _128_ (
    .A(_060_),
    .B(_027_),
    .Y(_067_)
  );
  ORX1_CV _129_ (
    .A(_120_),
    .B(_067_),
    .Y(_068_)
  );
  ANX1_CV _130_ (
    .A(_066_),
    .B(_068_),
    .Y(_069_)
  );
  NDX1_CV _131_ (
    .A(_065_),
    .B(_069_),
    .Y(_070_)
  );
  ANX1_CV _132_ (
    .A(_062_),
    .B(_070_),
    .Y(_111_)
  );
  ORX1_CV _133_ (
    .A(_020_),
    .B(_061_),
    .Y(_071_)
  );
  NDX1_CV _134_ (
    .A(_044_),
    .B(_064_),
    .Y(_072_)
  );
  NDX1_CV _135_ (
    .A(_036_),
    .B(_063_),
    .Y(_073_)
  );
  NRX1_CV _136_ (
    .A(_060_),
    .B(_028_),
    .Y(_074_)
  );
  ORX1_CV _137_ (
    .A(_120_),
    .B(_074_),
    .Y(_075_)
  );
  ANX1_CV _138_ (
    .A(_073_),
    .B(_075_),
    .Y(_076_)
  );
  NDX1_CV _139_ (
    .A(_072_),
    .B(_076_),
    .Y(_077_)
  );
  ANX1_CV _140_ (
    .A(_071_),
    .B(_077_),
    .Y(_112_)
  );
  ORX1_CV _141_ (
    .A(_021_),
    .B(_061_),
    .Y(_078_)
  );
  NDX1_CV _142_ (
    .A(_045_),
    .B(_064_),
    .Y(_079_)
  );
  NDX1_CV _143_ (
    .A(_037_),
    .B(_063_),
    .Y(_080_)
  );
  NRX1_CV _144_ (
    .A(_060_),
    .B(_029_),
    .Y(_081_)
  );
  ORX1_CV _145_ (
    .A(_120_),
    .B(_081_),
    .Y(_082_)
  );
  ANX1_CV _146_ (
    .A(_080_),
    .B(_082_),
    .Y(_083_)
  );
  NDX1_CV _147_ (
    .A(_079_),
    .B(_083_),
    .Y(_084_)
  );
  ANX1_CV _148_ (
    .A(_078_),
    .B(_084_),
    .Y(_113_)
  );
  ORX1_CV _149_ (
    .A(_022_),
    .B(_061_),
    .Y(_085_)
  );
  NDX1_CV _150_ (
    .A(_046_),
    .B(_064_),
    .Y(_086_)
  );
  NDX1_CV _151_ (
    .A(_038_),
    .B(_063_),
    .Y(_087_)
  );
  NRX1_CV _152_ (
    .A(_060_),
    .B(_030_),
    .Y(_088_)
  );
  ORX1_CV _153_ (
    .A(_120_),
    .B(_088_),
    .Y(_089_)
  );
  ANX1_CV _154_ (
    .A(_087_),
    .B(_089_),
    .Y(_090_)
  );
  NDX1_CV _155_ (
    .A(_086_),
    .B(_090_),
    .Y(_091_)
  );
  ANX1_CV _156_ (
    .A(_085_),
    .B(_091_),
    .Y(_114_)
  );
  ORX1_CV _157_ (
    .A(_023_),
    .B(_061_),
    .Y(_092_)
  );
  NDX1_CV _158_ (
    .A(_047_),
    .B(_064_),
    .Y(_093_)
  );
  NDX1_CV _159_ (
    .A(_039_),
    .B(_063_),
    .Y(_094_)
  );
  NRX1_CV _160_ (
    .A(_060_),
    .B(_031_),
    .Y(_095_)
  );
  ORX1_CV _161_ (
    .A(_120_),
    .B(_095_),
    .Y(_096_)
  );
  ANX1_CV _162_ (
    .A(_094_),
    .B(_096_),
    .Y(_097_)
  );
  NDX1_CV _163_ (
    .A(_093_),
    .B(_097_),
    .Y(_098_)
  );
  ANX1_CV _164_ (
    .A(_092_),
    .B(_098_),
    .Y(_115_)
  );
  ORX1_CV _165_ (
    .A(_024_),
    .B(_061_),
    .Y(_099_)
  );
  NDX1_CV _166_ (
    .A(_048_),
    .B(_064_),
    .Y(_100_)
  );
  NDX1_CV _167_ (
    .A(_040_),
    .B(_063_),
    .Y(_101_)
  );
  NRX1_CV _168_ (
    .A(_060_),
    .B(_032_),
    .Y(_102_)
  );
  ORX1_CV _169_ (
    .A(_120_),
    .B(_102_),
    .Y(_103_)
  );
  ANX1_CV _170_ (
    .A(_100_),
    .B(_101_),
    .Y(_104_)
  );
  NDX1_CV _171_ (
    .A(_103_),
    .B(_104_),
    .Y(_105_)
  );
  ANX1_CV _172_ (
    .A(_099_),
    .B(_105_),
    .Y(_116_)
  );
  ORX1_CV _173_ (
    .A(_025_),
    .B(_061_),
    .Y(_106_)
  );
  NDX1_CV _174_ (
    .A(_049_),
    .B(_064_),
    .Y(_107_)
  );
  NDX1_CV _175_ (
    .A(_041_),
    .B(_063_),
    .Y(_108_)
  );
  NRX1_CV _176_ (
    .A(_060_),
    .B(_033_),
    .Y(_109_)
  );
  ORX1_CV _177_ (
    .A(_120_),
    .B(_109_),
    .Y(_110_)
  );
  ANX1_CV _178_ (
    .A(_107_),
    .B(_108_),
    .Y(_051_)
  );
  NDX1_CV _179_ (
    .A(_110_),
    .B(_051_),
    .Y(_052_)
  );
  ANX1_CV _180_ (
    .A(_106_),
    .B(_052_),
    .Y(_117_)
  );
  ORX1_CV _181_ (
    .A(_026_),
    .B(_061_),
    .Y(_053_)
  );
  NDX1_CV _182_ (
    .A(_050_),
    .B(_064_),
    .Y(_054_)
  );
  NDX1_CV _183_ (
    .A(_042_),
    .B(_063_),
    .Y(_055_)
  );
  NRX1_CV _184_ (
    .A(_060_),
    .B(_034_),
    .Y(_056_)
  );
  ORX1_CV _185_ (
    .A(_120_),
    .B(_056_),
    .Y(_057_)
  );
  ANX1_CV _186_ (
    .A(_055_),
    .B(_057_),
    .Y(_058_)
  );
  NDX1_CV _187_ (
    .A(_054_),
    .B(_058_),
    .Y(_059_)
  );
  ANX1_CV _188_ (
    .A(_053_),
    .B(_059_),
    .Y(_118_)
  );
  assign _119_ = select[0];
  assign _120_ = select[1];
  assign _043_ = in4[0];
  assign _035_ = in3[0];
  assign _027_ = in2[0];
  assign _019_ = in1[0];
  assign out[0] = _111_;
  assign _044_ = in4[1];
  assign _036_ = in3[1];
  assign _028_ = in2[1];
  assign _020_ = in1[1];
  assign out[1] = _112_;
  assign _045_ = in4[2];
  assign _037_ = in3[2];
  assign _029_ = in2[2];
  assign _021_ = in1[2];
  assign out[2] = _113_;
  assign _046_ = in4[3];
  assign _038_ = in3[3];
  assign _030_ = in2[3];
  assign _022_ = in1[3];
  assign out[3] = _114_;
  assign _047_ = in4[4];
  assign _039_ = in3[4];
  assign _031_ = in2[4];
  assign _023_ = in1[4];
  assign out[4] = _115_;
  assign _048_ = in4[5];
  assign _040_ = in3[5];
  assign _032_ = in2[5];
  assign _024_ = in1[5];
  assign out[5] = _116_;
  assign _049_ = in4[6];
  assign _041_ = in3[6];
  assign _033_ = in2[6];
  assign _025_ = in1[6];
  assign out[6] = _117_;
  assign _050_ = in4[7];
  assign _042_ = in3[7];
  assign _034_ = in2[7];
  assign _026_ = in1[7];
  assign out[7] = _118_;
endmodule
